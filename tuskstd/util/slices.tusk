var rmbegin
var rmend
var slice

ovld rmbegin = fn(string -> str, number -> amt) {
    substringed := ""

    strl := len:(str) - 1
    camt := clone:(amt)

    while (strl >= camt) {
        substringed = (string -> (str::(strl))) + substringed
        strl--
    }

    return substringed
}

ovld rmbegin = fn(array -> arr, number -> amt) {
    removed := []

    arrl := len:(arr) - 1
    camt := clone:(amt)

    while (arrl >= camt) {
        removed = prepend:(removed, arr::(arrl))
        arrl--
    }

    return removed
}

ovld rmend = fn(string -> str, number -> amt) {
    substringed := ""

    camt := len:(str) - clone:(amt) - 1

    while (camt >= 0) {
        substringed = (string -> (str::(camt))) + substringed
        camt--
    }

    return substringed
}

ovld rmend = fn(array -> arr, number -> amt) {
    removed := []

    camt := len:(arr) - clone:(amt) - 1

    while (camt >= 0) {
        removed = prepend:(removed, arr::(camt))
        camt--
    }

    return removed
}

ovld slice = fn(string -> str, number -> start, number -> end) {
    substringed := ""

    cstart := clone:(start)
    cend := clone:(end)

    while (cstart < cend) {
        substringed+=(str::(cstart))
        cstart++
    }

    return substringed
}

ovld slice = fn(array -> arr, number -> start, number -> end) {
    removed := []

    cstart := clone:(start)
    cend := clone:(end)

    while (cstart < cend) {
        removed = append:(removed, arr::(cstart))
        cstart++
    }

    return removed
}

